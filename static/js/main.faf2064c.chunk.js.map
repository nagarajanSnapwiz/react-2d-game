{"version":3,"sources":["wheel.png","Utils.js","WorldContext.js","PhysicsWorld.js","PhysicsObject.js","Joints/SimpleRevoluteJoint.js","Pixi/AppContext.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fromPhysicsToCanvas","n","SCALE","fromCanvasToPhysics","worldContext","React","createContext","Provider","UsePhysicsWorld","width","height","shape","gravity","x","y","enclosed","enclosureThickness","children","scaleFactor","allowSleep","backgroundColor","antialias","renderer","useRef","PIXI","stage","domRef","world","b2World","b2Vec2","current","useLayoutEffect","append","view","SetAllowSleeping","thickness","bodyDef","b2BodyDef","type","b2BodyType","b2_staticBody","fixDef","b2FixtureDef","b2PolygonShape","density","friction","restitution","SetAsBox","position","fixt","CreateBody","CreateFixture","m_body","SetUserData","category","Utils","callback","requestRef","previousTimeRef","animate","time","undefined","deltaTime","requestAnimationFrame","useEffect","cancelAnimationFrame","Step","ClearForces","b","m_bodyList","m_next","IsAwake","userData","GetUserData","hostRef","removed","DestroyBody","GetPosition","angle","GetAngle","Object","assign","rotation","render","PhysicsWorld","worldRef","value","ref","DEGTORAD","forwardRef","url","texture","fromCanvas","props","useContext","fixed","data","initialForce","initialImpulse","bullet","radius","physObjectRef","b2_dynamicBody","body","Error","b2CircleShape","SetBullet","ApplyForce","GetWorldCenter","ApplyLinearImpulse","SetAwake","SetPositionXY","SetAngle","usePhysicsObject","useImperativeHandle","applyForce","applyImpulse","image","from","quality","fill","canvas","stroke","strokeWidth","document","createElement","ctx","getContext","console","log","fillStyle","ratio","fillRect","beginPath","arc","Math","PI","closePath","createTextureFromCanvas","anchor","set","addChild","useJoint","anchors","collideConected","enableLimit","motorSpeed","maxMotorTorque","ref1","ref2","enableMotor","WorldContext","jointRef","jointDef","b2RevoluteJointDef","bodyA","bodyB","x1","y1","x2","y2","localAnchorA","localAnchorB","collideConnected","joint","CreateJoint","DestroyJoint","EnableLimit","EnableMotor","SetMotorSpeed","SetMaxMotorTorque","WheelF","options","anchors1","anchors2","Car","useState","speed","setSpeed","useHotKeys","frontWheelRef","backWheelRef","bodyRef","onClick","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.faf2064c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wheel.347094cc.png\";","//I hate writing utils file. Typically that means don't know how to group your utilities\n//for now this will have to do\nimport { b2BodyDef, b2FixtureDef, b2Body, b2PolygonShape, b2BodyType } from \"@flyover/box2d\";\nimport React from 'react';\n\n//some utilities to deal with co-ordinate systems variations with some sanity intact\n//seems simple enough. But without these , I get very easily confused\n\n//Box2d typically deals with meters(realworld) and not pixels(our canvas on screen) \nexport function fromPhysicsToCanvas(n, SCALE) {\n    return n * SCALE;\n}\n\nexport function fromCanvasToPhysics(n, SCALE) {\n    return n / SCALE;\n}\n\n\n//without this , beginners (and almost everybody) will go mad\n//this creates a box fence of static bodies to prevent the objects falling out of the visible area and continuing to fall infinitely like Alice in rabbit hole\nexport function makeEnclosedBox(width, height, thickness, world, SCALE) {\n    var bodyDef = new b2BodyDef;\n    bodyDef.type = b2BodyType.b2_staticBody;\n    var fixDef = new b2FixtureDef;\n    fixDef.shape = new b2PolygonShape;\n    // half width, half height.\n    fixDef.density = 1.0;\n    fixDef.friction = 0.5;\n    fixDef.restitution = 0;\n\n    //left \n    fixDef.shape.SetAsBox(fromCanvasToPhysics(thickness / 2, SCALE), fromCanvasToPhysics(height / 2, SCALE))\n    bodyDef.position.x = fromCanvasToPhysics(thickness / 2, SCALE);\n    bodyDef.position.y = fromCanvasToPhysics(height / 2, SCALE);\n    let fixt = world.CreateBody(bodyDef).CreateFixture(fixDef);\n    fixt.m_body.SetUserData({ category: '_LEFT_WALL_' });\n    //bottom\n    //half width,half height\n    fixDef.shape.SetAsBox(fromCanvasToPhysics(width / 2, SCALE), fromCanvasToPhysics(thickness / 2, SCALE));\n    bodyDef.position.x = fromCanvasToPhysics(width / 2, SCALE);\n    bodyDef.position.y = fromCanvasToPhysics(height, SCALE);\n    fixt = world.CreateBody(bodyDef).CreateFixture(fixDef);\n    fixt.m_body.SetUserData({ category: '_BOTTOM_WALL_' });\n\n    //top\n    fixDef.shape.SetAsBox(fromCanvasToPhysics(width / 2, SCALE), fromCanvasToPhysics(thickness / 2, SCALE));\n    bodyDef.position.x = fromCanvasToPhysics(width / 2, SCALE);\n    bodyDef.position.y = fromCanvasToPhysics(thickness / 2, SCALE);\n    fixt = world.CreateBody(bodyDef).CreateFixture(fixDef);\n    fixt.m_body.SetUserData({ category: '_TOP_WALL_' });\n\n    //right\n    fixDef.shape.SetAsBox(fromCanvasToPhysics(thickness / 2, SCALE), fromCanvasToPhysics(height / 2, SCALE));\n    bodyDef.position.x = fromCanvasToPhysics(width, SCALE);\n    bodyDef.position.y = fromCanvasToPhysics(height / 2, SCALE);\n    fixt = world.CreateBody(bodyDef).CreateFixture(fixDef);\n    fixt.m_body.SetUserData({ category: '_RIGHT_WALL_' });\n\n}\n\nexport function delay(millis) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => resolve(), millis);\n    });\n}\n\n\n//https://css-tricks.com/using-requestanimationframe-with-react-hooks\nexport function useAnimationFrame(callback) {\n    const requestRef = React.useRef();\n    const previousTimeRef = React.useRef();\n\n    const animate = time => {\n        if (previousTimeRef.current != undefined) {\n            const deltaTime = time - previousTimeRef.current;\n            callback(deltaTime)\n        }\n        previousTimeRef.current = time;\n        requestRef.current = requestAnimationFrame(animate);\n    }\n\n    React.useEffect(() => {\n        requestRef.current = requestAnimationFrame(animate);\n        return () => cancelAnimationFrame(requestRef.current);\n    }, []); // Make sure the effect runs only once\n}\n","import React from 'react';\n\nconst worldContext = React.createContext();\nexport default worldContext;","//@ts-check\nimport React, { useLayoutEffect, useImperativeHandle, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n//@ts-ignore\nimport { b2World, b2Vec2, b2BodyDef, b2FixtureDef, b2Body, b2PolygonShape, b2CircleShape, b2BodyType } from \"@flyover/box2d\";\nimport * as Utils from './Utils';\nimport * as PIXI from 'pixi.js';\nimport worldContext from './WorldContext';\nconst { Provider } = worldContext;\n\n\nexport function UsePhysicsWorld({ width, height, shape, gravity = { x: 0, y: 9.8 }, enclosed = true, enclosureThickness = 3, children, scaleFactor = 60, allowSleep = true, backgroundColor = 0x000, antialias = true, ...restProps }) {\n\n    const renderer = useRef(new PIXI.Renderer({ width, height, backgroundColor, antialias }));\n    const stage = useRef(new PIXI.Container());\n    const domRef = useRef();\n\n    const world = useRef(new b2World(new b2Vec2(gravity.x, gravity.y)));\n    //@ts-ignore\n    world.current.scaleFactor = scaleFactor;\n    //@ts-ignore\n    world.current.stage = stage.current;\n\n    useLayoutEffect(() => {\n\n\n        //@ts-ignore\n        domRef.current.append(renderer.current.view);\n        world.current.SetAllowSleeping(allowSleep);\n        Utils.makeEnclosedBox(width, height, enclosureThickness, world.current, scaleFactor);\n\n    }, []);\n\n\n\n\n    Utils.useAnimationFrame(function (deltaTime) {\n        world.current.Step(\n            1 / 60,  //frame-rate (just hoping typical 60hz. in future, planning to use webworkers for uninterrupted physics simulation)\n            10,       //velocity iterations\n            10,       //position iterations\n        );\n        world.current.ClearForces();\n        for (let b = world.current.m_bodyList; b; b = b.m_next) {\n            if (!b.IsAwake()) {\n                continue;\n            }\n\n            let userData = b.GetUserData();\n\n            if (userData && userData.hostRef && userData.hostRef.current) {\n                if (userData.removed) {\n                    world.current.DestroyBody(b);\n                } else {\n\n                    let { x, y } = b.GetPosition();\n                    let angle = b.GetAngle();\n\n                    Object.assign(userData.hostRef.current, { x: Utils.fromPhysicsToCanvas(x, scaleFactor), y: Utils.fromPhysicsToCanvas(y, scaleFactor), rotation: angle });\n\n                }\n            }\n        }\n\n\n        renderer.current.render(stage.current);\n    });\n\n    return { world: world.current, domRef };\n\n}\n\n\nexport default function PhysicsWorld({ children, ...props }) {\n\n    //@ts-ignore\n    const { world: worldRef, domRef } = UsePhysicsWorld(props);\n\n    return (<Provider value={worldRef}>\n        <div ref={domRef}>\n\n        </div>\n        {children}\n    </Provider>);\n}\n\nexport { worldContext };","//@ts-check\nimport React, { useEffect, useImperativeHandle, useRef, useContext, forwardRef } from 'react';\n//@ts-ignore\nimport { b2World, b2Vec2, b2BodyDef, b2FixtureDef, b2Body, b2PolygonShape, b2CircleShape, b2BodyType } from \"@flyover/box2d\";\nimport * as Utils from './Utils';\nimport * as PIXI from 'pixi.js';\nimport worldContext from './WorldContext';\n\nconst DEGTORAD = 0.0174532925199432957;\n\n\nexport function usePhysicsObject({ fixed = false, restitution = 0.1, friction = 0.5, density = 1, shape = 'box', category = null, data, width, height, x, y, initialForce, initialImpulse, bullet, radius, angle }) {\n\n    const world = useContext(worldContext);\n    const SCALE = world.scaleFactor;\n    const physObjectRef = useRef();\n    const hostRef = useRef()\n    useEffect(() => {\n        const bodyDef = new b2BodyDef;\n        bodyDef.type = (fixed) ? b2BodyType.b2_staticBody : b2BodyType.b2_dynamicBody;\n        const fixDef = new b2FixtureDef;\n        fixDef.shape = new b2PolygonShape;\n        Object.assign(fixDef, { density, friction, restitution });\n        if (x) {\n            bodyDef.position.x = Utils.fromCanvasToPhysics(x, SCALE);\n        }\n\n        if (y) {\n            bodyDef.position.y = Utils.fromCanvasToPhysics(y, SCALE);\n        }\n\n        const body = world.CreateBody(bodyDef);\n        if (shape === \"box\") {\n            fixDef.shape = new b2PolygonShape;\n            //@ts-ignore\n            fixDef.shape.SetAsBox(Utils.fromCanvasToPhysics(width / 2, SCALE), Utils.fromCanvasToPhysics(height / 2, SCALE));\n            body.CreateFixture(fixDef);\n        } else if (shape === \"circle\") {\n            fixDef.shape = new b2CircleShape(Utils.fromCanvasToPhysics(radius, SCALE));\n            body.CreateFixture(fixDef);\n        } else {\n            throw new Error(`Unknown shape ${shape}, only box and circle supported for now`);\n        }\n        const userData = { category, hostRef };\n        if (data) {\n            userData.data = data;\n        }\n        body.SetUserData(userData);\n        if (bullet) {\n            body.SetBullet(bullet);\n        }\n        if (initialForce) {\n            body.ApplyForce(new b2Vec2(initialForce.x, initialForce.y), body.GetWorldCenter());\n        }\n        if (initialImpulse) {\n            body.ApplyLinearImpulse(new b2Vec2(initialImpulse.x, initialImpulse.y), body.GetWorldCenter());\n\n        }\n\n        physObjectRef.current = body;\n\n        return () => {\n            let userData = body.GetUserData();\n            userData.removed = true;\n            body.SetUserData(userData);\n            body.SetAwake(true);\n        }\n    }, []);\n\n\n    useEffect(() => {\n        if (fixed && physObjectRef.current) {\n            //@ts-ignore\n            physObjectRef.current.SetPositionXY(Utils.fromCanvasToPhysics(x, SCALE), Utils.fromCanvasToPhysics(y, SCALE));\n            /**\n             * @type {b2Body}\n             */\n            const body = physObjectRef.current;\n            if (angle) {\n                //@ts-ignore\n                body.SetAngle(angle * DEGTORAD);\n\n            }\n\n        }\n    }, [x, y, angle]);\n\n    return { physObjectRef, hostRef };\n}\n\nfunction createTextureFromCanvas({ width, height, shape = \"box\", radius, quality = 500, fill = \"grey\", stroke = \"lime\", strokeWidth = 0 }) {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    console.log('canvinhjjh props', { fill, shape });\n    ctx.fillStyle = fill;\n\n\n    if (shape === \"box\") {\n        const ratio = width / height;//1.5\n        canvas.width = ratio * quality;\n        canvas.height = quality;\n        ctx.fillStyle = fill;\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    } else if (shape === \"circle\") {\n        canvas.width = quality * 2;\n        canvas.height = quality * 2;\n        ctx.beginPath();\n        ctx.arc(quality, quality, quality, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.fillStyle = 'red';\n        ctx.fill();\n\n\n\n    } else {\n        throw new Error(`Unknow Shape ${shape}`);\n    }\n\n    console.log('canvas', canvas);\n\n    return PIXI.Texture.from(canvas);\n\n}\n\n\nfunction PhysicsObject({ url, texture, fromCanvas = false, ...props }, ref) {\n\n    const world = useContext(worldContext);\n    //@ts-ignore\n    const { physObjectRef, hostRef } = usePhysicsObject(props);\n\n    useImperativeHandle(ref, () => ({\n        body: physObjectRef,\n        applyForce: ({ x, y }) => {\n            const body = physObjectRef.current;\n            body.ApplyForce(new b2Vec2(x, y), body.GetWorldCenter());\n        },\n        applyImpulse: ({ x, y }) => {\n            const body = physObjectRef.current;\n            body.ApplyLinearImpulse(new b2Vec2(x, y), body.GetWorldCenter());\n        }\n    }));\n\n    useEffect(() => {\n        let image;\n        if (url) {\n            image = PIXI.Sprite.from(url);\n        } else if (fromCanvas) {\n            //@ts-ignore\n\n            image = PIXI.Sprite.from(createTextureFromCanvas(props));\n        } else if (texture) {\n            image = PIXI.Sprite.from(texture);\n        }\n\n        console.log('image', image);\n\n        if (props.shape === \"circle\") {\n            image.width = props.radius * 2;\n            image.height = props.radius * 2;\n        } else {\n            image.width = props.width;\n            image.height = props.height;\n        }\n\n        image.anchor.set(0.5);\n        //@ts-ignore\n        hostRef.current = image;\n        world.stage.addChild(image);\n\n    }, []);\n\n    return null;\n}\n\n\nexport default forwardRef(PhysicsObject);","\nimport React, { useRef, useEffect, Fragment, useContext } from 'react';\nimport { b2RevoluteJoint, b2RevoluteJointDef, b2Vec2, b2World } from '@flyover/box2d';\nimport PropTypes from 'prop-types';\nimport WorldContext from '../WorldContext';\nimport * as Utils from '../Utils';\n\n\nexport function useJoint({ anchors, collideConected, enableLimit, motorSpeed = 0, maxMotorTorque = 0, ref1, ref2, enableMotor }) {\n    /**\n     * @type {b2World & {scaleFactor:number}}\n     */\n    const world = useContext(WorldContext);\n    const { scaleFactor: SCALE } = world;\n    const jointRef = useRef();\n\n\n    useEffect(() => {\n        const jointDef = new b2RevoluteJointDef();\n        jointDef.bodyA = ref1.current.body.current;\n        jointDef.bodyB = ref2.current.body.current;\n        const { x: x1, y: y1 } = anchors[0];\n        const { x: x2, y: y2 } = anchors[1];\n        //get world and scaleFactor\n        //@ts-ignore\n        jointDef.localAnchorA = new b2Vec2(Utils.fromCanvasToPhysics(x1, SCALE), Utils.fromCanvasToPhysics(y1, SCALE));\n        //@ts-ignore\n        jointDef.localAnchorB = new b2Vec2(Utils.fromCanvasToPhysics(x2, SCALE), Utils.fromCanvasToPhysics(y2, SCALE));\n        jointDef.collideConnected = collideConected;\n        const joint = world.CreateJoint(jointDef);\n        //@ts-ignore\n        jointRef.current = joint;\n        return () => {\n            world.DestroyJoint(joint);\n        }\n\n    }, [anchors, ref1.current, ref2.current]);\n\n    useEffect(() => {\n        /**\n         * @type {b2RevoluteJoint}\n         */\n        const joint = jointRef.current;\n        joint.EnableLimit(enableLimit);\n        joint.EnableMotor(enableMotor);\n        joint.SetMotorSpeed(motorSpeed);\n        if (maxMotorTorque) {\n            joint.SetMaxMotorTorque(maxMotorTorque);\n        }\n    }, [enableLimit, enableMotor, motorSpeed, maxMotorTorque]);\n    return jointRef;\n}\n\nexport default function RevoluteJoint({ children, ...props }) {\n    const ref1 = useRef();\n    const ref2 = useRef();\n    //@ts-ignore\n    useJoint({ ...props, ref1, ref2 })\n    return (<Fragment>\n        {React.cloneElement(children[0], { ref: ref1 })}\n        {React.cloneElement(children[1], { ref: ref2 })}\n    </Fragment>)\n}\n","import React from 'react';\n\nexport default React.createContext(); ","import React, { forwardRef, useState, useRef, Fragment } from 'react'\nimport PropTypes from 'prop-types'\n\nimport * as PIXI from 'pixi.js';\nimport PhysicsWorld from './PhysicsWorld';\nimport PhysicsObject from './PhysicsObject';\nimport { useJoint } from './Joints/SimpleRevoluteJoint';\nimport useHotKeys from '@reecelucas/react-use-hotkeys';\nimport Sprite from './Pixi/Sprite';\nimport Application, { useAppTicker } from './Pixi/Application';\nimport wheel from './wheel.png';\n\n\n\nfunction Bunny(props, ref) {\n  return <PhysicsObject ref={ref} width={26} height={37} shape=\"box\" {...props} />\n}\n\nfunction Wheel(props, ref) {\n  return <PhysicsObject ref={ref} radius={20} shape=\"circle\" url='/wheel.png' {...props} />\n}\n\nconst WheelF = forwardRef(Wheel);\n\nconst BunnyF = forwardRef(Bunny);\n\nconst options = { backgroundColor: 0x1099bb, height: 400, width: 1000 };\n\nconst anchors1 = [{ x: 0, y: 0 }, { x: -42, y: 15 }];\n\nconst anchors2 = [{ x: 42, y: 15 }, { x: 0, y: 0 }];\n\nfunction Car() {\n\n  const [speed, setSpeed] = useState(0);\n  useHotKeys('ArrowRight', () => {\n    setSpeed(360 * 15 * (Math.PI / 180) * (-1));\n\n  });\n\n  useHotKeys('ArrowLeft', () => {\n    setSpeed(360 * 15 * (Math.PI / 180));\n\n  });\n\n  const frontWheelRef = useRef();\n  const backWheelRef = useRef();\n  const bodyRef = useRef();\n\n  const joint1Ref = useJoint({\n    enableMotor: true,\n    motorSpeed: speed,\n    maxMotorTorque: 4,\n    anchors: anchors1,\n    ref1: frontWheelRef,\n    ref2: bodyRef\n  });\n\n  const joint2Ref = useJoint({\n    enableMotor: false,\n    anchors: anchors2,\n    ref1: bodyRef,\n    ref2: backWheelRef\n  })\n\n  return (<Fragment>\n    <WheelF ref={frontWheelRef} x={30} y={100} density={3} />\n    <WheelF ref={backWheelRef} x={30} y={100} density={3} />\n    <PhysicsObject density={1.5} ref={bodyRef} fromCanvas width={100} height={35} x={160} y={270} fill=\"violet\" />\n    <PhysicsObject fixed angle={-1} density={1.5} fromCanvas width={200} height={18} x={400} y={374} fill=\"green\" />\n    <PhysicsObject density={1.5} fromCanvas width={40} height={60} x={500} y={200} fill=\"green\" />\n    <button onClick={() => setSpeed(360 * 15 * (Math.PI / 180) * (-1))}>go</button>\n    <button onClick={() => setSpeed(360 * 15 * (Math.PI / 180))}>Reverse</button>\n    <button onClick={() => setSpeed(0)}>Stop</button>\n  </Fragment>)\n}\n\nexport default function Game() {\n\n  return (\n    <PhysicsWorld {...options}>\n      {/* <RevoluteJoint> */}\n\n      {/* </RevoluteJoint> */}\n\n\n      <Car />\n    </PhysicsWorld>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}